{"version":3,"sources":["httpService/optionService.js","httpService/discoverService.js","module/reducer/option.js","module/action/optionAction.js","module/reducer/movies.js","module/action/discover.js","module/index.js","httpService/httpService.js","theme/index.js","reportWebVitals.js","component/fallback/index.js","index.js"],"names":["getGenreOption","a","httpService","get","discover","filter_option","params","types","intitalState","option_genre","option_subTitles","option_sortBy","value","label","Reducer","state","action","type","payload","set_genre_option","data","action_fetch_genre_option","force","dispatch","getState","option","Array","isArray","length","optionService","response","status","genres","console","log","initialState","isLoading","errorMessage","page","results","total_pages","total_results","_getCommonState","set_loading_state","set_errorMessage","message","set_discovered_movies","set_filter_option","action_discover_movies","discoverService","setTimeout","RootReducer","combineReducers","OptionReducer","movie","MovieReducer","BASE_IMG_URL","axiosInstance","axios","create","baseURL","process","timeout","interceptors","request","use","config","url","error","Promise","resolve","theme","createTheme","palette","primary","main","contrastText","secondary","typography","button","textTransform","fontSize","fontFamily","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FallBackLoader","style","textAlign","top","App","React","lazy","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","ThemeProvider","Suspense","fallback","document","getElementById"],"mappings":"+dAEO,SAAeA,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACUC,IAAYC,IAAZ,qBADV,oF,sBCAA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,SAAAJ,EAAA,sEACUC,IAAYC,IAAZ,kBAAkC,CAC3CG,OAAQD,IAFT,oF,iCCFDE,EACgB,mBADhBA,EAEmB,sBAkCZC,EAAe,CACxBC,aAAc,GACdC,iBAAkB,GAClBC,cAlCe,CACf,CACIC,MAAO,aACPC,MAAO,cAEX,CACID,MAAO,eACPC,MAAO,gBAEX,CACID,MAAO,UACPC,MAAO,WAEX,CACID,MAAO,uBACPC,MAAO,wBAEX,CACID,MAAO,iBACPC,MAAO,kBAEX,CACID,MAAO,eACPC,MAAO,gBAEX,CACID,MAAO,aACPC,MAAO,gBA6BAC,EAnBC,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC9C,OAAQA,EAAOC,MACX,KAAKV,EACD,OAAO,2BACAQ,GADP,IAEIN,aAAcO,EAAOE,UAG7B,KAAKX,EACD,OAAO,2BACAQ,GADP,IAEIL,iBAAkBM,EAAOE,UAGjC,QACI,OAAOH,IAWNI,EAAmB,eAACC,EAAD,uDAAQ,GAAR,MAAgB,CAC5CH,KAAMV,EACNW,QAASE,IC7DAC,EAA4B,WAAmB,IAAlBC,EAAiB,wDACvD,8CAAO,WAAOC,EAASC,GAAhB,qBAAAvB,EAAA,yDACGmB,GAAe,QAAR,EAAAI,WAAA,eAAYC,OAAOhB,eAAgB,MAE5Ca,GAASI,MAAMC,QAAQP,IAASA,EAAKQ,OAAS,GAH/C,0EAQwBC,EAAc7B,iBARtC,UASwB,OADjB8B,EARP,QASaC,OATb,kCAUwBD,EAASV,KAVjC,SAWK,QADMA,EAVX,cAWK,IAAGA,OAAH,EAAGA,EAAMY,SACLT,EAASJ,EAAgB,OAACC,QAAD,IAACA,OAAD,EAACA,EAAMY,SAZzC,0DAgBCC,QAAQC,IAAR,MAhBD,0DAAP,yDCVE3B,EACW,cADXA,EAEiB,oBAFjBA,EAGgB,mBAHhBA,EAIiB,oBAGjB4B,EAAe,CAEjBC,WAAW,EACXC,aAAc,GAKdC,KAAM,EACNC,QAAS,GACTC,YAAa,EACbC,cAAe,EAEfpC,cAAe,IAoDbqC,EAAkB,SAAC3B,GAAD,mBAAC,eAClBA,GADiB,IAGpBsB,aAAc,MAGHvB,EAjDC,WAAmC,IAAlCC,EAAiC,uDAAzBoB,EAAcnB,EAAW,uCAC9C,OAAQA,EAAOC,MAEX,KAAKV,EACD,OAAO,2BACAmC,EAAgB3B,IADvB,IAEIqB,UAAWpB,EAAOE,UAG1B,KAAKX,EACD,OAAO,2BACAmC,EAAgB3B,IADvB,IAEIsB,aAAcrB,EAAOE,UAG7B,KAAKX,EAAL,MAMQS,EAJAsB,YAFR,MAEe,EAFf,IAMQtB,EAHAuB,eAHR,MAGkB,GAHlB,IAMQvB,EAFAwB,mBAJR,MAIsB,EAJtB,IAMQxB,EADAyB,qBALR,MAKwB,EALxB,EAQI,OAAO,2BACA1B,GADP,IAEIuB,OACAC,UACAC,cACAC,kBAGR,KAAKlC,EACD,OAAO,2BACAQ,GADP,IAEIV,cAAeW,EAAOE,UAE9B,QACI,OAAO,eACAwB,EAAgB3B,MAmBtB4B,EAAoB,eAACP,EAAD,8DAAwB,CACrDnB,KAAMV,EACNW,QAASkB,IAGAQ,EAAmB,eAACC,EAAD,uDAAW,GAAX,MAAmB,CAC/C5B,KAAMV,EACNW,QAAS2B,IAGAC,EAAwB,SAAC,GAAD,QACjCR,YADiC,MAC1B,EAD0B,MAEjCC,eAFiC,MAEvB,GAFuB,MAGjCC,mBAHiC,MAGnB,EAHmB,MAIjCC,cAJiC,MAK9B,CACHxB,KAAMV,EACN+B,OACAC,UACAC,cACAC,mBAViC,MAIjB,EAJiB,IAaxBM,EAAoB,eAACtB,EAAD,uDAAU,GAAV,MAAkB,CAC/CR,KAAMV,EACNW,QAASO,ICrGAuB,EAAyB,WAAkB,IAAjBvB,EAAgB,uDAAP,GAC5C,8CAAO,WAAOF,EAAUC,GAAjB,+BAAAvB,EAAA,sEAECsB,EAASwB,EAAkBtB,IAC3BF,EAASoB,GAAkB,IAH5B,SAIwBM,EAAgB7C,SAASqB,GAJjD,UAKyB,OADlBK,EAJP,QAKcC,OALd,iCAMwBD,EAASV,KANjC,QAOK,QADMA,EANX,cAOK,IAAIA,OAAJ,EAAIA,EAAMkB,QAAO,EAMTlB,EAJAkB,YAFQ,MAED,EAFC,IAMRlB,EAHAmB,eAHQ,MAGE,GAHF,IAMRnB,EAFAoB,mBAJQ,MAIM,EAJN,IAMRpB,EADAqB,cAEJlB,EAASuB,EAAsB,CAC3BR,OAAMC,UAASC,cAAaC,mBARpB,MAKQ,EALR,MAPrB,QAmBCS,YAAW,WACP3B,EAASoB,OACV,KArBJ,kDAuBCpB,EAASqB,EAAiB,KAAMC,UAvBjC,0DAAP,yDCDEM,EAAcC,YAAgB,CAChC3B,OAAQ4B,EACRC,MAAOC,IAGIJ,O,uICbTK,EAAe,6BAIfC,E,OAAgBC,EAAMC,OAAO,CAC/BC,QAJaC,+BAKbC,QAAS,MAGbL,EAAcM,aAAaC,QAAQC,KAAI,SAAAC,GAEnC,OADAA,EAAOC,KAAP,mBARgBN,oCASTK,KAGXT,EAAcM,aAAajC,SAASmC,KAChC,SAAAnC,GACI,OAAOA,IAFf,+BAAA7B,EAAA,MAII,WAAgBmE,GAAhB,iBAAAnE,EAAA,6DACUmB,GAAY,OAALgD,QAAK,IAALA,GAAA,UAAAA,EAAOtC,gBAAP,eAAiBV,OAAQ,GAD1C,kBAEWiD,QAAQC,QAAQlD,IAF3B,2CAJJ,wD,yJCKemD,EAnBDC,YAAY,CACtBC,QAAS,CACLC,QAAS,CACLC,KAAM,UACNC,aAAc,WAElBC,UAAW,CACPF,KAAM,YAGdG,WAAY,CACRC,OAAQ,CACJC,cAAe,QAEnBC,SAAU,GACVC,WAAY,CAAC,iB,QCLNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCSGQ,EAdM,kBACnB,qBAAKC,MAAO,CACRC,UAAW,UADf,SAGI,mBAAGD,MAAO,CACNE,IAAK,OADT,2BCSFC,EAAMC,IAAMC,MAAK,kBAAM,uDAEvBC,EAAQC,YACZjD,IACAkD,YACEC,YAAgBC,KAChBC,OAAOC,8BAAgCD,OAAOC,iCAIlDC,IAASC,OAEP,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAerC,MAAOA,EAAtB,SACE,cAAC,IAAD,CAAU4B,MAAOA,EAAjB,SACE,cAAC,IAAMU,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACE,cAACd,EAAD,YAMRe,SAASC,eAAe,SAM1B7B,M","file":"static/js/main.568d3c34.chunk.js","sourcesContent":["import { httpService } from './index';\n\nexport async function getGenreOption() {\n    return await httpService.get(`/genre/movie/list`);\n}\n","import { httpService } from './index';\n\nexport async function discover(filter_option) {\n    return await httpService.get(`/discover/movie`,{\n        params: filter_option\n    });\n}\n","const types = {\n    SET_GENRE_OPTION: \"SET_GENRE_OPTION\",\n    SET_SUBTITLE_OPTION: \"SET_SUBTITLE_OPTION\",\n}\n\nconst sortOption = [\n    {\n        value: 'popularity',\n        label: 'Popularity'\n    },\n    {\n        value: 'release_date',\n        label: 'Release Date'\n    },\n    {\n        value: 'revenue',\n        label: 'Revenue'\n    },\n    {\n        value: 'primary_release_date',\n        label: 'Primary release date'\n    },\n    {\n        value: 'original_title',\n        label: 'Original Title'\n    },\n    {\n        value: 'vote_average',\n        label: 'Vote average'\n    },\n    {\n        value: 'vote_count',\n        label: 'Vote count'\n    },\n];\n\nexport const intitalState = {\n    option_genre: [],\n    option_subTitles: [],\n    option_sortBy: sortOption,\n}\n\nconst Reducer = (state = intitalState, action) => {\n    switch (action.type) {\n        case types.SET_GENRE_OPTION:\n            return {\n                ...state,\n                option_genre: action.payload\n            }\n\n        case types.SET_SUBTITLE_OPTION:\n            return {\n                ...state,\n                option_subTitles: action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default Reducer;\n\n/**\n * actions\n * @param {*} data \n * @returns \n */\nexport const set_genre_option = (data = []) => ({\n    type: types.SET_GENRE_OPTION,\n    payload: data\n})\n\nexport const set_subtitle_option = (data = []) => ({\n    type: types.SET_SUBTITLE_OPTION,\n    payload: data\n})","import {\n    optionService\n} from '../../httpService';\nimport { set_genre_option } from '../reducer/option';\n\n/**\n * fetch genre option\n * @param {*} force \n */\nexport const action_fetch_genre_option = (force = false)=> {\n    return async (dispatch,getState) => {\n        const data = getState()?.option.option_genre || []\n\n        if(!force && Array.isArray(data) && data.length > 0) {\n            return;\n        }\n\n        try {\n            const response = await optionService.getGenreOption();\n            if(response.status === 200) {\n                const data = await response.data;\n                if(data?.genres){\n                    dispatch(set_genre_option(data?.genres));\n                }                \n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}","const types = {\n    SET_LOADING: \"SET_LOADING\",\n    SET_ERROR_MESSAGE: \"SET_ERROR_MESSAGE\",\n    SET_MOVIES_RESLT: \"SET_MOVIES_RESLT\",\n    SET_FILTER_OPTION: \"SET_FILTER_OPTION\"\n}\n\nconst initialState = {\n\n    isLoading: false,\n    errorMessage: '',\n\n    /**\n     * movie result\n     */\n    page: 1,\n    results: [],\n    total_pages: 1,\n    total_results: 0,\n\n    filter_option: {}\n}\n\n/**\n * \n * @param {*} state \n * @param {*} action \n * @returns \n */\nconst Reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case types.SET_LOADING:\n            return {\n                ..._getCommonState(state),\n                isLoading: action.payload\n            }\n\n        case types.SET_ERROR_MESSAGE:\n            return {\n                ..._getCommonState(state),\n                errorMessage: action.payload\n            }\n\n        case types.SET_MOVIES_RESLT:\n            const {\n                page = 1,\n                results = [],\n                total_pages = 1,\n                total_results = 0\n            } = action\n\n            return {\n                ...state,\n                page,\n                results,\n                total_pages,\n                total_results\n            }\n\n        case types.SET_FILTER_OPTION:\n            return {\n                ...state,\n                filter_option: action.payload\n            }\n        default:\n            return {\n                ..._getCommonState(state)\n            }\n    }\n}\n\nconst _getCommonState = (state) => ({\n    ...state,\n    // isLoading: false,\n    errorMessage: ''\n})\n\nexport default Reducer;\n\n/**\n *  actions\n * @param {*} state \n * @returns \n */\n\nexport const set_loading_state = (isLoading = false) => ({\n    type: types.SET_LOADING,\n    payload: isLoading\n})\n\nexport const set_errorMessage = (message = '') => ({\n    type: types.SET_ERROR_MESSAGE,\n    payload: message\n})\n\nexport const set_discovered_movies = ({\n    page = 1,\n    results = [],\n    total_pages = 1,\n    total_results = 0\n}) => ({\n    type: types.SET_MOVIES_RESLT,\n    page,\n    results,\n    total_pages,\n    total_results\n})\n\nexport const set_filter_option = (option = {}) => ({\n    type: types.SET_FILTER_OPTION,\n    payload: option\n})","import {\n    discoverService\n} from '../../httpService';\nimport {\n    set_discovered_movies,\n    set_errorMessage,\n    set_loading_state,\n    set_filter_option\n} from '../reducer/movies';\n\nexport const action_discover_movies = (option = {}) => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch(set_filter_option(option));\n            dispatch(set_loading_state(true));\n            const response = await discoverService.discover(option);\n            if (response.status === 200) {\n                const data = await response.data;\n                if (data?.page) {\n                    const {\n                        page = 1,\n                        results = [],\n                        total_pages = 1,\n                        total_results = 0\n                    } = data\n                    dispatch(set_discovered_movies({\n                        page, results, total_pages, total_results\n                    }))\n                }\n            }\n            setTimeout(() => {\n                dispatch(set_loading_state());\n            }, 500)\n        } catch (error) {\n            dispatch(set_errorMessage(error.message))\n        }\n    }\n}","import { combineReducers } from 'redux';\nimport {\n    OptionAction,\n    DiscoverAction\n} from './action';\nimport {\n    MovieReducer,\n    OptionReducer\n} from './reducer';\n\nconst RootReducer = combineReducers({\n    option: OptionReducer,\n    movie: MovieReducer\n})\n\nexport default RootReducer;\n\nexport {\n    OptionAction,\n    DiscoverAction\n}\n\n","import axios from 'axios';\n\nconst BASE_IMG_URL = 'https://www.themoviedb.org';\nconst BASE_URL = process.env.REACT_APP_BASE_URL\nconst MOV_API_KEY = process.env.REACT_APP_MOV_API_KEY\n\nconst axiosInstance = axios.create({\n    baseURL:BASE_URL,\n    timeout: 10000\n})\n\naxiosInstance.interceptors.request.use(config=>{\n    config.url += `?api_key=${MOV_API_KEY}`;\n    return config;\n})\n\naxiosInstance.interceptors.response.use(\n    response => {\n        return response;\n    },\n    async function (error) {\n        const data = error?.response?.data || {};\n        return Promise.resolve(data);\n    }\n)\n\nexport {\n    axiosInstance,\n    BASE_IMG_URL,\n    BASE_URL,\n    MOV_API_KEY,\n}","import { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#491C54',\n            contrastText: '#e9e9ef'\n        },\n        secondary: {\n            main: '#c43b23'\n        },\n    },\n    typography: {\n        button: {\n            textTransform: 'none'\n        },\n        fontSize: 14,\n        fontFamily: ['system-ui;']\n    }\n})\n\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst FallBackLoader = () => (\n    <div style={{\n        textAlign: 'center',\n    }}>\n        <p style={{\n            top: '50%'\n        }}>\n            loading...\n        </p>\n      \n    </div>\n  )\n  \n\n  export default FallBackLoader","import React from 'react';\nimport thunk from 'redux-thunk';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport { applyMiddleware, compose, createStore } from 'redux';\n\nimport './index.css';\nimport theme from './theme'\nimport RootReducer from './module';\nimport reportWebVitals from './reportWebVitals';\nimport FallBackLoader from './component/fallback';\n\n\nconst App = React.lazy(() => import('./App'));\n\nconst store = createStore(\n  RootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <React.Suspense fallback={<FallBackLoader />}>\n          <App />\n        </React.Suspense>\n      </Provider>\n    </ThemeProvider>\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}