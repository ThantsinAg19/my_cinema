{"version":3,"sources":["pages/home/pagination.js","pages/home/skeleton.js","pages/home/index.js","component/Formcontrol/FormGroup.js","component/Formcontrol/input.js","component/Formcontrol/datepicker.js","component/Formcontrol/select.js","component/Formcontrol/textarea.js","component/Formcontrol/radio.js","component/Formcontrol/checkbox.js","component/Formcontrol/datetime_local.js","component/Formcontrol/multiselect.js","component/Formcontrol/index.js","pages/sidebar/index.js","container/home.js","container/sidebar.js","App.js"],"names":["Mypagination","current_page","total_pages","dispatch","filter_option","useSelector","state","movie","style","marginTop","Pagination","color","page","count","size","shape","onChange","event","Number","DiscoverAction","action_discover_movies","alignSelf","float","width","border","padding","MovSkeleton","classes","Paper","className","card_container","Array","from","keys","map","index","Card","card_style","Box","Skeleton","height","variant","CardContent","card_content","useStyles","makeStyles","root","display","flexDirection","justifyContent","flexWrap","borderRadius","paddingTop","paddingBottom","maxWidth","margin","textOverflow","borderTop","textAlign","media_cotainer","position","card_media","voting_box","fontSize","right","HomePage","isLoading","errorMessage","results","useDispatch","useEffect","mov","vote_avg","vote_average","src","BASE_IMG_URL","poster_path","alt","original_title","title","release_date","IconColor","VotedStar","icon","StarHalf","StarOutline","olor","Star","FormGroup","label","name","children","marginRight","htmlFor","marginBottom","Input","props","type","useField","meta","hasError","error","touched","onWheel","currentTarget","blur","Datepicker","minDate","format","React","useState","Date","date","setdate","value","field","setFieldValue","form","utils","DateFnsUtil","id","KeyboardButtonProps","contentEditable","autoOk","Select","options","showloading","as","key","_id","Textarea","rows","Radio","singleLine","opt","Fragment","checked","CheckBoxWrapper","styled","CheckBox","CURRENT_DATE_TIME","moment","FormDateTimeLocal","TextField","defaultValue","InputLabelProps","shrink","e","MultiSelect","getOptionValue","option","getOptionLabel","isMulti","closeMenuOnSelect","idList","v","Types","radio","checkbox","select","textarea","autocomplete","datetime_local","multi_select","ENUM_TYPES","t","push","FormControl","control","marginLeft","sort_flex","button_div","button","SortOrder","INPUT_NAME","initialValues","with_genres","sort_by","sort_order","ValidationSchema","Yup","SideBar","genreOption","sortOption","OptionAction","action_fetch_genre_option","handleSubmit","data","a","payload","validationSchema","onSubmit","_","Button","onClick","resetForm","submitForm","Divider","connect","total_results","option_genre","option_sortBy","Home","App","AppBar","backgroundColor","Grid","container","spacing","item","xs","sm","md","lg","xl"],"mappings":"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","file":"static/js/4.c952a3b2.chunk.js","sourcesContent":["import React from 'react'\nimport { Pagination } from \"@material-ui/lab\"\nimport { DiscoverAction } from '../../module';\nimport { useSelector } from 'react-redux';\n\nconst Mypagination = ({\n    current_page = 1,\n    total_pages = 1,\n    dispatch\n}) => {\n\n    const filter_option = useSelector(state => state?.movie?.filter_option)\n\n    const onChagePage = (event, page) => {\n        if (Number(page) !== Number(current_page))\n            dispatch(DiscoverAction.action_discover_movies({\n                ...filter_option,\n                page: page\n            }));\n    }\n\n    return (\n        <div style={{\n            marginTop: 10\n        }}>\n            <Pagination\n                color='secondary'\n                page={current_page}\n                count={total_pages}\n                size='large'\n                shape=\"rounded\"\n                onChange={onChagePage}\n                style={{\n                    alignSelf: 'flex-end',\n                    float: 'right',\n                    width: 'auto',\n                    border: '1px solid #e9e9ef',\n                    padding: 5\n                }}\n            />\n        </div>\n    )\n}\n\nexport default Mypagination","import React from 'react';\nimport { Box, Card, CardContent, Paper } from \"@material-ui/core\";\nimport { Skeleton } from '@material-ui/lab';\n\nconst MovSkeleton = ({\n    classes = {}\n}) => {\n    return (\n        <Paper className={classes.card_container}>\n            {\n                Array.from(Array(20).keys()).map((index) => (\n                    <Card\n                        key={index}\n                        className={classes.card_style}\n                    >\n                        <Box>\n                            <Skeleton height={270} variant='rect'/>\n                        </Box>\n                        <CardContent className={classes.card_content}>\n                            <b>\n                                <Skeleton variant='rect'/>\n                            </b>\n                            <br />\n                            <Skeleton height={20} width={'40%'}/>\n                        </CardContent>\n                    </Card>\n                ))\n            }\n        </Paper>\n    )\n}\n\nexport default MovSkeleton;","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n    Card,\n    CardContent,\n    makeStyles,\n    Paper\n} from \"@material-ui/core\";\nimport {\n    Star,\n    StarHalf,\n    StarOutline\n} from '@material-ui/icons'\n\nimport { DiscoverAction } from \"../../module\";\nimport { BASE_IMG_URL } from \"../../httpService/httpService\";\nimport Mypagination from \"./pagination\";\nimport MovSkeleton from \"./skeleton\";\n\nconst useStyles = makeStyles({\n    root: {\n        // padding: 10\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    card_container: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        border: '1px solid #e9e9ef',\n        borderRadius: 5,\n        paddingTop: 20,\n        paddingBottom: 20\n    },\n    card_style: {\n        border: '1px solid #e9e9ef',\n        width: 250,\n        maxWidth: 250,\n        margin: 10\n    },\n    card_content: {\n        textOverflow: 'ellipsis',\n        borderTop: '1px solid #e9e9ef',\n        textAlign: 'left'\n    },\n    media_cotainer: {\n        position: 'relative'\n    },\n    card_media: {\n        height: 270,\n    },\n    voting_box: {\n        fontSize: 12,\n        padding: 5,\n        right: 0,\n        position: 'absolute',\n    }\n})\n\n\nconst HomePage = ({\n    isLoading = true,\n    errorMessage = '',\n    page = 1,\n    results = [],\n    total_pages = 0,\n}) => {\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        /**\n         * fetch data by default movies\n         */\n        dispatch(DiscoverAction.action_discover_movies({\n            page: 1\n        }));\n\n    }, [dispatch])\n\n    if (isLoading)\n        return <MovSkeleton classes={classes} />\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.card_container}>\n                {\n                    results.map((mov, index) => (\n                        <Card\n                            key={index + mov?.title}\n                            className={classes.card_style}\n                        >\n                            <div className={classes.media_cotainer}>\n\n                                <VotedStar\n                                    vote_avg={Number(mov?.vote_average)}\n                                    className={classes.voting_box}\n                                />\n                                <img\n                                    src={`${BASE_IMG_URL}/t/p/w220_and_h330_face${mov?.poster_path}`}\n                                    className={classes.card_media}\n                                    alt={`${mov?.original_title}`} />\n                            </div>\n                            <CardContent className={classes.card_content}>\n                                <b>\n                                    {mov?.title}\n                                </b>\n                                <br />\n                                <span style={{ fontSize: 13 }}>\n                                    {mov?.release_date}\n                                </span>\n                            </CardContent>\n                        </Card>\n                    ))\n                }\n            </Paper>\n            <Mypagination\n                current_page={page}\n                total_pages={total_pages}\n                dispatch={dispatch}\n            />\n        </div>\n    )\n\n}\n\nexport default HomePage;\n\nconst IconFontSize = 16\nconst IconColor = \"primary\"\nconst VotedStar = ({\n    vote_avg = 0,\n    className = \"\"\n}) => {\n    let icon = <StarHalf\n        fontSize=\"small\"\n        color={IconColor}\n        style={{ fontSize: IconFontSize }} />\n\n    if (vote_avg >= 1 && vote_avg <= 4)\n        icon = <StarOutline\n            fontSize=\"small\"\n            olor={IconColor}\n            style={{ fontSize: IconFontSize }} />\n\n    else if (vote_avg > 7)\n        icon = <Star\n            fontSize=\"small\"\n            color={IconColor}\n            style={{ fontSize: IconFontSize }} />\n\n    return (\n        <Paper className={className}>\n            <span>{vote_avg}</span>{'  '}{icon}\n        </Paper>\n    )\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormGroup = ({ label, name, children }) => {\n    return (\n        <div style={{marginTop: 15,marginRight: 5}}>\n            {label &&\n                <label htmlFor={name}\n                    style={{\n                        display: 'block',\n                        marginBottom: 3\n                    }}\n                >{label}</label>}\n            {children}\n        </div>\n    )\n}\n\nFormGroup.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default FormGroup","import React from 'react';\nimport { Field, useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport FormGroup from './FormGroup';\n\nconst Input = props => {\n    const { name, label, type = 'text' } = props;\n    const [, meta] = useField(props)\n\n    const hasError = meta.error && meta.touched\n\n    return (\n        <FormGroup\n            name={name}\n            label={label}\n        >\n            <Field\n                name={name}\n                type={type}\n                className={`inputField ${hasError && 'inputError'}`}\n                {...props}\n                /**\n                 * prevent mouse wheel event.\n                 */\n                onWheel={event => event.currentTarget.blur()}\n            />\n            <span className={\"messageError\"}>{hasError ? meta.error : ''}</span>\n        </FormGroup>\n    )\n}\n\nInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    control: PropTypes.string\n}\n\nexport default Input","import 'date-fns';\nimport React, { useEffect } from 'react';\nimport { Field, useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport FormGroup from './FormGroup';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtil from '@date-io/date-fns'\n\nconst Datepicker = props => {\n    const {\n        name, label,\n        minDate,\n        format = 'dd / MM / yyyy' } = props;\n\n    const [date, setdate] = React.useState(new Date());\n\n    const [,meta] = useField(props)\n\n    useEffect(()=>{\n        if(!meta.value)\n            setdate(new Date())\n    },[meta.value])\n    \n    return (\n        <FormGroup\n            name={name}\n            label={label}\n        >\n            <Field name={name} {...props}>\n                {({\n                    field,\n                    form: { setFieldValue },\n                    meta\n                }) => {\n                    const hasError = meta.error && meta.touched\n                    return (\n                        <>\n                            <MuiPickersUtilsProvider utils={DateFnsUtil}>\n                                <KeyboardDatePicker\n                                    value={date}\n                                    variant=\"inline\"\n                                    format={format}\n                                    margin=\"dense\"\n                                    id={`date-picker-inline-${name}`}\n                                    className={`date-input inputField ${hasError && 'inputError'}`}\n                                    onChange={(date) => {\n                                        setdate(date);\n                                        setFieldValue(name, new Date(date))\n                                    }}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date'\n                                    }}\n                                    minDate={minDate}\n                                    contentEditable={false}\n                                    autoOk={true}\n                                />\n                            </MuiPickersUtilsProvider>\n                            <span className={\"messageError\"}>{hasError ? meta.error : ''}</span>\n                        </>\n                    )\n                }}\n            </Field>\n        </FormGroup>\n    )\n}\n\nDatepicker.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    control: PropTypes.string\n}\n\nexport default Datepicker;","import React from 'react';\nimport { Field, useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport FormGroup from './FormGroup';\n\nconst Select = props => {\n\n    const { name, label, options = [], showloading = false, } = props;\n    const [, meta] = useField(props)\n\n    const hasError = meta.error && meta.touched\n\n    return (\n        <FormGroup\n            name={name}\n            label={label}\n        >\n            <Field\n                as=\"select\"\n                name={name}\n                className={`inputField ${hasError ? 'inputError' : ''}`}\n                {...props}\n            >\n                <option value={''} key={''}>\n                    {\n                            showloading ?\n                            'Loading...'\n                            :\n                            label\n                    }\n                </option>\n                {\n                    options.map(({ name, label, key, value, _id }, index) => (\n                        <option\n                            key={index}\n                            value={value || _id}\n                        >\n                            {name || label || key}\n                        </option>\n                    ))\n                }\n            </Field>\n            <span className={\"messageError\"}>{hasError ? meta.error : ''}</span>\n        </FormGroup>\n    )\n}\n\nSelect.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    control: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired\n}\nexport default Select","import React from 'react';\nimport { Field, useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport FormGroup from './FormGroup';\n\nconst Textarea = props => {\n    const {\n        name,\n        label,\n        type = 'text',\n        rows = '3'\n    } = props;\n    const [, meta] = useField(props)\n\n    const hasError = meta.error && meta.touched\n    return (\n        <FormGroup\n            name={name}\n            label={label}\n        >\n            <Field\n                as={'textarea'}\n                name={name}\n                type={type}\n                rows={rows}\n                className={`inputField ${hasError && 'inputError'}`}\n                {...props}\n            />\n            <span className={\"messageError\"}>{hasError ? meta.error : ''}</span>\n        </FormGroup>\n    )\n}\n\nTextarea.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n}\n\nexport default Textarea","import React from 'react';\nimport { Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport FormGroup from './FormGroup';\n\nconst Radio = ({ name, options = [], label, singleLine = false }) => (\n    <FormGroup\n        name={name}\n        label={label}\n    >\n        <Field name={name}>\n            {\n                ({ field }) => (\n                    options.map((opt, index) => (\n                        <React.Fragment key={index}>\n                            <input\n                                type=\"radio\"\n                                {...field}\n                                value={opt.value}\n                                checked={field.value === opt.value}\n                            />\n                            {opt.key || opt.label || opt.name}\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            {singleLine && <><br /><br /></>}\n                        </React.Fragment>\n                    ))\n                )\n            }\n        </Field>\n\n    </FormGroup>\n)\n\nRadio.propTypes = {\n    name: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string,\n            value: PropTypes.string.isRequired\n        })\n    )\n}\n\nexport default Radio;","import React from 'react';\nimport { Field } from 'formik';\nimport PropTypes from 'prop-types'\nimport FormGroup from './FormGroup';\n\nimport styled from 'styled-components';\n\nconst CheckBoxWrapper = styled.label`\n    margin-right: 1.5 rem;\n    position: relative;\n    cursor:pointer;\n    user-select: none;\n    input[type=\"checkbox\"] {\n        margin-right: 0.3rem;\n    }\n`;\n\nconst CheckBox = ({ name, options = [], label }) => (\n    <FormGroup\n        name={ name }\n        label={ label }\n    >\n        <Field name={ name }>\n            {\n                ({ field }) => (\n                    options.map((opt, index) => (\n                        <CheckBoxWrapper key={ index }>\n                            <input\n                                type=\"checkbox\"\n                                { ...field }\n                                value={ opt.value}\n                                checked={ field.value === opt.value }\n                            />\n                            {opt.key || opt.label || opt.name }\n                        </CheckBoxWrapper>\n                    ))\n                )\n            }\n        </Field>\n\n    </FormGroup>\n)\n\nCheckBox.propTypes = {\n    name: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string,\n            value: PropTypes.string.isRequired\n        })\n    )\n}\n\nexport default CheckBox;","import { Field } from 'formik';\nimport React from 'react';\nimport FormGroup from './FormGroup';\nimport PropTypes from 'prop-types'\nimport { TextField } from '@material-ui/core';\nimport moment from 'moment'\n\nexport const CURRENT_DATE_TIME = moment().format('yyyy-MM-DDThh:mm')\n\nconst FormDateTimeLocal = (props) => {\n    const { name, label, } = props\n\n    return (\n        <FormGroup\n            name={name}\n            label={label}\n        >\n            <Field name={name} {...props}>\n                {({\n                    field,\n                    form: { setFieldValue },\n                    meta\n                }) => {\n                    const hasError = meta.error && meta.touched\n                    return (\n                        <React.Fragment>\n                            <TextField\n                                id={`date-time-local-${name}`}\n                                className={`inputField ${hasError && 'inputError'}`}\n                                type=\"datetime-local\"\n                                defaultValue={CURRENT_DATE_TIME}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                onChange={(e, value) => setFieldValue(name, value)}\n                            />\n                            <span className={\"messageError\"}>{hasError ? meta.error : ''}</span>\n                        </React.Fragment>\n                    )\n                }}\n            </Field>\n\n        </FormGroup>\n    )\n}\n\nFormDateTimeLocal.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n}\n\nexport default FormDateTimeLocal;","import React from 'react';\nimport Select from 'react-select'\nimport PropTypes from 'prop-types';\nimport { Field, useField } from 'formik';\n\nimport FormGroup from './FormGroup';\n\nconst MultiSelect = props => {\n\n    const { name, label, options = [], } = props;\n    const [, meta] = useField(props)\n\n    const hasError = meta.error && meta.touched\n\n    return (\n        <FormGroup\n            name={name}\n            label={label}\n        >\n            <Field name={name} {...props}>\n                {({\n                    field,\n                    form: { setFieldValue },\n                    meta\n                }) => {\n                    const hasError = meta.error && meta.touched\n                    return (\n                        <React.Fragment>\n                            <Select\n                                options={options}\n                                getOptionValue={option => option?.id || option?.value}\n                                getOptionLabel={option => option?.label || option?.name}\n                                isMulti={true}\n                                closeMenuOnSelect={false}\n                                onChange={(value) => {\n                                    const idList = value.map(v => v.id)\n                                    setFieldValue(name, idList)\n                                }}\n                            />\n                            <span className={\"messageError\"}>{hasError ? meta.error : ''}</span>\n                        </React.Fragment>\n                    )\n                }}\n            </Field>\n            <span className={\"messageError\"}>{hasError ? meta.error : ''}</span>\n        </FormGroup>\n    )\n}\n\nMultiSelect.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    control: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired\n}\nexport default MultiSelect","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './input';\nimport Datepicker from './datepicker';\nimport Select from './select';\nimport Textarea from './textarea';\nimport Radio from './radio';\nimport CheckBox from './checkbox';\nimport FormDateTimeLocal, { CURRENT_DATE_TIME } from './datetime_local';\nimport MultiSelect from './multiselect';\n\nexport const Types = {\n    radio: \"radio\",\n    checkbox: \"checkbox\",\n    select: \"select\",\n    date: \"date\",\n    textarea: \"textarea\",\n    autocomplete: \"autocomplete\",\n    datetime_local: \"datetime_local\",\n    multi_select: \"multi_select\"\n}\n\nlet ENUM_TYPES = []\n\nfor (const t in Types) {\n    ENUM_TYPES.push(Types[t])\n}\n\n\nconst FormControl = (props) => {\n    const { control } = props;\n    switch (control) {\n        case Types.radio:\n            return <Radio {...props} />\n        case Types.checkbox:\n            return <CheckBox {...props} />\n        case Types.select:\n            return <Select {...props} />\n        case Types.date:\n            return <Datepicker {...props} />\n        case Types.textarea:\n            return <Textarea {...props} />\n        case Types.datetime_local:\n            return <FormDateTimeLocal {...props} />\n        case Types.multi_select:\n            return <MultiSelect {...props}/>\n        default:\n            return <Input {...props} />\n    }\n}\n\nFormControl.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    touched: PropTypes.object,\n    errors: PropTypes.object,\n    control: PropTypes.oneOf(ENUM_TYPES),\n    defaultValue: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n        PropTypes.number\n    ])\n}\nexport default FormControl\n\nexport {\n    CURRENT_DATE_TIME\n}","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    Search as SerachIcon\n} from '@material-ui/icons'\nimport { Button, makeStyles, Paper } from '@material-ui/core';\n\nimport { OptionAction, DiscoverAction } from '../../module';\nimport FormControl, { Types } from '../../component/Formcontrol';\n\nconst useStyles = makeStyles({\n    root: {\n        marginLeft: 10,\n        textAlign: 'left',\n        padding: 10,\n        border: '1px solid #e9e9ef'\n    },\n    sort_flex: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: 20\n    },\n    button_div: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexDirection: 'row',\n    },\n    button: {\n        alignSelf: 'flex-end',\n        marginRight: 5,\n        marginTop: 20\n    },\n\n})\n\nconst SortOrder = [\n    {\n        value: 'asc',\n        label: 'Asc',\n    },\n    {\n        value: 'desc',\n        label: 'Desc',\n    }\n]\n\n/**\n * formik\n */\nconst INPUT_NAME = {\n    with_genres: 'with_genres',\n    sort_by: 'sort_by',\n    sort_order: 'sort_order'\n\n}\nconst initialValues = {\n    with_genres: [],\n\n    /**\n     * default value\n     */\n    sort_by: 'popularity',\n    sort_order: 'desc'\n}\n\nconst ValidationSchema = Yup.object({\n    with_genres: Yup.array(),\n    sort_by: Yup.string(),\n    sort_order: Yup.string()\n})\n\nconst SideBar = ({\n    genreOption = [],\n    sortOption = []\n}) => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        /**\n         * fetch options \n         */\n        dispatch(OptionAction.action_fetch_genre_option())\n    }, [dispatch])\n\n    const handleSubmit = async (data) => {\n        let { with_genres, sort_by, sort_order } = data\n        let payload = {\n            page: 1,\n            with_genres,\n        }\n        \n        if (sort_by)\n            payload.sort_by = `${sort_by}.${sort_order || 'desc'}`\n\n        else payload.sort_by = 'popularity.desc'\n\n        dispatch(DiscoverAction.action_discover_movies(payload))\n    }\n\n    return (\n        <Paper className={classes.root}>\n            <h3>Search your fav!</h3>\n            <Divider/>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={ValidationSchema}\n                onSubmit={handleSubmit}\n            >\n                {\n                    _ => (\n                        <>\n                            <FormControl\n                                name={INPUT_NAME.with_genres}\n                                label='Genres'\n                                control={Types.multi_select}\n                                options={genreOption}\n                            />\n                            <div className={classes.sort_flex}>\n                                <FormControl\n                                    name={INPUT_NAME.sort_by}\n                                    label='Sort by'\n                                    control={Types.select}\n                                    options={sortOption}\n                                />\n                                <FormControl\n                                    name={INPUT_NAME.sort_order}\n                                    label='Order by'\n                                    control={Types.select}\n                                    options={SortOrder}\n                                />\n                            </div>\n                            <Divider/>\n                            <div className={classes.button_div}>\n                                <Button\n                                    color=\"secondary\"\n                                    variant='contained'\n                                    className={classes.button}\n                                    onClick={_.resetForm}\n                                >\n                                    Clear\n                                </Button>\n                                <Button\n                                    color=\"primary\"\n                                    variant='contained'\n                                    className={classes.button}\n                                    onClick={_.submitForm}\n                                >\n                                    <SerachIcon fontSize='small' />\n                                    Search\n                                </Button>\n                            </div>\n                        </>\n\n                    )\n                }\n\n            </Formik>\n        </Paper>\n    )\n}\n\nexport default SideBar;\n\nconst Divider = () => <div style={{borderTop: '2px solid #e9e9ef'}}/>","import { connect } from \"react-redux\";\nimport { Home } from '../pages';\n\nexport default connect(\n    (state) => ({\n        isLoading:state.movie.isLoading,\n        errorMessage:state.movie.errorMessage,\n        \n        page:state.movie.page,\n        results:state.movie.results,\n        total_pages:state.movie.total_pages,\n        total_results:state.movie.total_results,\n\n        /**\n         * option\n         */\n        genreOption: state.option.option_genre,\n        sortOption : state.option.option_sortBy\n    }),\n    null\n)(Home);","import { connect } from \"react-redux\";\nimport {  SideBar } from '../pages';\n\nexport default connect(\n    (state) => ({\n        /**\n         * option\n         */\n        genreOption: state.option.option_genre,\n        sortOption : state.option.option_sortBy\n    }),\n    null\n)(SideBar);","import { AppBar, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\n\nimport {\n  HomePage,\n  SideBar,\n} from './container'\nimport Mypagination from './pages/home/pagination';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <AppBar position='sticky' style={{\n        backgroundColor: 'primary'\n      }}>\n        <h2>\n          My Cinema\n        </h2>\n      </AppBar>\n      <main>\n        <Mypagination\n          current_page={1}\n          total_pages={500}\n          dispatch={dispatch}\n        />\n        <Grid\n          container\n          spacing={1}\n          justifyContent='space-between'\n        > <Grid item xs={12} sm={12} md={2} lg={2} xl={2}>\n            <SideBar />\n          </Grid>\n          <Grid item xs={12} sm={12} md={10} lg={10} xl={10}>\n            <HomePage />\n          </Grid>\n        </Grid>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"sourceRoot":""}